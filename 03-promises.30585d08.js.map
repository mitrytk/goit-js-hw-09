{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAO,CACXC,YAAaC,SAASC,cAAc,uBACpCC,WAAYF,SAASC,cAAc,sBACnCE,aAAcH,SAASC,cAAc,wBACrCG,WAAYJ,SAASC,cAAc,kCAErCH,EAAKM,WAAWC,iBAAiB,SAEjC,SAAuBC,GACrBA,EAAIC,iBACJ,IAAMC,EAASC,OAAOX,EAAKK,aAAaO,OAClCC,EAAQF,OAAOX,EAAKI,WAAWQ,OAC/BE,EAAaH,OAAOX,EAAKC,YAAYW,OAEvCG,EAAW,EAEfC,YAAW,WACTC,aAAY,WAgBhB,IAAuBC,EAAUC,EACzBC,EAhBEL,GAAYL,KAeCQ,EAdDH,EAcWI,EAdDN,EAexBO,EAAgBC,KAAKC,SAAW,GAC/BC,QAAU,IAAIC,SAAQ,SAACC,EAASC,GACjCN,EACFK,EAAQ,CAAEP,WAAUC,UAEpBO,EAAO,CAAER,WAAUC,S,KAnBhBQ,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAEjBU,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,IAEvEc,OAAM,SAAAL,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAElBU,EAAA/B,GAASgC,OAAOI,QAAQ,sBAAqCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,IAErEJ,GAAY,E,GAEbF,E,GACFC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  delayFeldEl: document.querySelector('input[name=\"delay\"]'),\n  stepFeldEl: document.querySelector('input[name=\"step\"]'),\n  amountFeldEl: document.querySelector('input[name=\"amount\"]'),\n  createBtEl: document.querySelector('.form > button[type=\"submit\"]'),\n}\nrefs.createBtEl.addEventListener('click', onCreateClick);\n\nfunction onCreateClick(evt) {\n  evt.preventDefault();\n  const amount = Number(refs.amountFeldEl.value); \n  const delay = Number(refs.stepFeldEl.value);\n  const firstDelay = Number(refs.delayFeldEl.value);\n\n  let position = 1;\n\n  setTimeout(() => {\n    setInterval(() => {\n      if (position <= amount) {\n        createPromise(position, delay)\n        .then(({ position, delay }) => {\n          // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        })\n        position += 1;\n      }\n    }, delay)\n  }, firstDelay);\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  })\n}\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","delayFeldEl","document","querySelector","stepFeldEl","amountFeldEl","createBtEl","addEventListener","evt","preventDefault","amount","Number","value","delay1","firstDelay","position1","setTimeout","setInterval","position","delay","shouldResolve","Math","random","promise","Promise","resolve","reject","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.30585d08.js.map"}