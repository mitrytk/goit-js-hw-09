{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,YAAaC,SAASC,cAAc,uBACpCC,WAAYF,SAASC,cAAc,sBACnCE,aAAcH,SAASC,cAAc,wBACrCG,WAAYJ,SAASC,cAAc,kCAErCH,EAAKM,WAAWC,iBAAiB,SAEjC,SAAuBC,GACrBA,EAAIC,iBACJ,MAAMC,EAASC,OAAOX,EAAKK,aAAaO,OAClCC,EAAQF,OAAOX,EAAKI,WAAWQ,OAC/BE,EAAaH,OAAOX,EAAKC,YAAYW,OAE3C,IAAIG,EAAW,EAEfC,YAAW,KACTC,aAAY,KACNF,GAAYL,IAetB,SAAuBQ,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAOC,QAAU,IAAIC,SAAQ,CAACC,EAASC,KACjCN,EACFK,EAAQ,C,SAAEP,E,MAAUC,IAEpBO,EAAO,C,SAAER,E,MAAUC,GAAQ,G,CApBzBQ,CAAcZ,EAAUF,GACvBe,MAAK,EAACV,SAAEA,EAAQC,MAAEA,MAEjBU,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAqBb,QAAiBC,MAAU,IAEzEa,OAAM,EAACd,SAAEA,EAAQC,MAAEA,MAElBU,EAAA/B,GAASgC,OAAOG,QAAQ,sBAAoBf,QAAeC,MAAU,IAEvEJ,GAAY,E,GAEbF,EAAM,GACRC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  delayFeldEl: document.querySelector('input[name=\"delay\"]'),\n  stepFeldEl: document.querySelector('input[name=\"step\"]'),\n  amountFeldEl: document.querySelector('input[name=\"amount\"]'),\n  createBtEl: document.querySelector('.form > button[type=\"submit\"]'),\n}\nrefs.createBtEl.addEventListener('click', onCreateClick);\n\nfunction onCreateClick(evt) {\n  evt.preventDefault();\n  const amount = Number(refs.amountFeldEl.value); \n  const delay = Number(refs.stepFeldEl.value);\n  const firstDelay = Number(refs.delayFeldEl.value);\n\n  let position = 1;\n\n  setTimeout(() => {\n    setInterval(() => {\n      if (position <= amount) {\n        createPromise(position, delay)\n        .then(({ position, delay }) => {\n          // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        })\n        position += 1;\n      }\n    }, delay)\n  }, firstDelay);\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  })\n}\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","delayFeldEl","document","querySelector","stepFeldEl","amountFeldEl","createBtEl","addEventListener","evt","preventDefault","amount","Number","value","delay1","firstDelay","position1","setTimeout","setInterval","position","delay","shouldResolve","Math","random","promise","Promise","resolve","reject","$47d4ff9957288465$var$createPromise","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.3e2d808a.js.map"}